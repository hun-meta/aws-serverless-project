"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerService = void 0;
class LoggerService {
    static getInstance() {
        if (!LoggerService.instance) {
            LoggerService.instance = new LoggerService();
        }
        return LoggerService.instance;
    }
    info(context, message, data) {
        const INFO = '[INFO]';
        const CONTEXT = `[${context}]`;
        const ICON = '‚ÑπÔ∏è';
        console.log(INFO + CONTEXT + ICON + ' ' + message + (data ? ' %o' : ''), data);
    }
    error(context, message = '', error) {
        const ERROR = '[ERROR]';
        const CONTEXT = `[${context}]`;
        const ICON = '‚ùå';
        console.error(ERROR + CONTEXT + ICON + ' Error occured (' + message + '): %o', error);
        if (error.stack) {
            console.error(ERROR + CONTEXT + ICON + ' Error stack: %o', error);
        }
    }
    warn(context, message, data) {
        const WARN = '[WARN]';
        const CONTEXT = `[${context}]`;
        const ICON = '‚ö†Ô∏è';
        console.log(WARN + CONTEXT + ICON + ' ' + message + (data ? ' %o' : ''), data);
    }
    debug(context, targetName, value) {
        const DEBUG = '[DEBUG]';
        const CONTEXT = `[${context}]`;
        const ICON = 'üîç'; // debug ÏïÑÏù¥ÏΩò
        console.log(DEBUG + CONTEXT + ICON + ` ${targetName}: %o`, value);
    }
}
exports.LoggerService = LoggerService;
// Ïã±Í∏ÄÌÜ§ Ïù∏Ïä§ÌÑ¥Ïä§Î•º ÏÉùÏÑ±ÌïòÍ≥† export
exports.default = LoggerService.getInstance();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsb2dnZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFhLGFBQWE7SUFHdEIsTUFBTSxDQUFDLFdBQVc7UUFDZCxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRTtZQUN6QixhQUFhLENBQUMsUUFBUSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7U0FDaEQ7UUFDRCxPQUFPLGFBQWEsQ0FBQyxRQUFRLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksQ0FBQyxPQUFlLEVBQUUsT0FBZSxFQUFFLElBQVU7UUFDN0MsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDO1FBQ3RCLE1BQU0sT0FBTyxHQUFHLElBQUksT0FBTyxHQUFHLENBQUM7UUFDL0IsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLE9BQU8sR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLE9BQU8sR0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNqRixDQUFDO0lBRUQsS0FBSyxDQUFDLE9BQWUsRUFBRSxVQUFrQixFQUFFLEVBQUUsS0FBVTtRQUNuRCxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUM7UUFDeEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxPQUFPLEdBQUcsQ0FBQztRQUMvQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUM7UUFDakIsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsT0FBTyxHQUFHLElBQUksR0FBRyxrQkFBa0IsR0FBRyxPQUFPLEdBQUcsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3RGLElBQUksS0FBSyxDQUFDLEtBQUssRUFBRTtZQUNiLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLE9BQU8sR0FBRyxJQUFJLEdBQUcsa0JBQWtCLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDckU7SUFDTCxDQUFDO0lBRUQsSUFBSSxDQUFDLE9BQWUsRUFBRSxPQUFlLEVBQUUsSUFBVTtRQUM3QyxNQUFNLElBQUksR0FBRyxRQUFRLENBQUM7UUFDdEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxPQUFPLEdBQUcsQ0FBQztRQUMvQixNQUFNLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsT0FBTyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxHQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFFRCxLQUFLLENBQUMsT0FBZSxFQUFFLFVBQWtCLEVBQUUsS0FBVTtRQUNqRCxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUM7UUFDeEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxPQUFPLEdBQUcsQ0FBQztRQUMvQixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxZQUFZO1FBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLE9BQU8sR0FBRyxJQUFJLEdBQUcsSUFBSSxVQUFVLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN0RSxDQUFDO0NBQ0o7QUF4Q0Qsc0NBd0NDO0FBRUQsd0JBQXdCO0FBQ3hCLGtCQUFlLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBMb2dnZXJTZXJ2aWNlIHtcbiAgICBwdWJsaWMgc3RhdGljIGluc3RhbmNlOiBMb2dnZXJTZXJ2aWNlO1xuXG4gICAgc3RhdGljIGdldEluc3RhbmNlKCk6IExvZ2dlclNlcnZpY2Uge1xuICAgICAgICBpZiAoIUxvZ2dlclNlcnZpY2UuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIExvZ2dlclNlcnZpY2UuaW5zdGFuY2UgPSBuZXcgTG9nZ2VyU2VydmljZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBMb2dnZXJTZXJ2aWNlLmluc3RhbmNlO1xuICAgIH1cblxuICAgIGluZm8oY29udGV4dDogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIGRhdGE/OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgSU5GTyA9ICdbSU5GT10nO1xuICAgICAgICBjb25zdCBDT05URVhUID0gYFske2NvbnRleHR9XWA7XG4gICAgICAgIGNvbnN0IElDT04gPSAn4oS577iPJztcbiAgICAgICAgY29uc29sZS5sb2coSU5GTyArIENPTlRFWFQgKyBJQ09OICsgJyAnICsgbWVzc2FnZSsoZGF0YSA/ICcgJW8nIDogJycpLCBkYXRhKTtcbiAgICB9XG5cbiAgICBlcnJvcihjb250ZXh0OiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZyA9ICcnLCBlcnJvcjogYW55KTogdm9pZCB7XG4gICAgICAgIGNvbnN0IEVSUk9SID0gJ1tFUlJPUl0nO1xuICAgICAgICBjb25zdCBDT05URVhUID0gYFske2NvbnRleHR9XWA7XG4gICAgICAgIGNvbnN0IElDT04gPSAn4p2MJztcbiAgICAgICAgY29uc29sZS5lcnJvcihFUlJPUiArIENPTlRFWFQgKyBJQ09OICsgJyBFcnJvciBvY2N1cmVkICgnICsgbWVzc2FnZSArICcpOiAlbycsIGVycm9yKTtcbiAgICAgICAgaWYgKGVycm9yLnN0YWNrKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKEVSUk9SICsgQ09OVEVYVCArIElDT04gKyAnIEVycm9yIHN0YWNrOiAlbycsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHdhcm4oY29udGV4dDogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIGRhdGE/OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgV0FSTiA9ICdbV0FSTl0nO1xuICAgICAgICBjb25zdCBDT05URVhUID0gYFske2NvbnRleHR9XWA7XG4gICAgICAgIGNvbnN0IElDT04gPSAn4pqg77iPJztcbiAgICAgICAgY29uc29sZS5sb2coV0FSTiArIENPTlRFWFQgKyBJQ09OICsgJyAnICsgbWVzc2FnZSsoZGF0YSA/ICcgJW8nIDogJycpLCBkYXRhKTtcbiAgICB9XG5cbiAgICBkZWJ1Zyhjb250ZXh0OiBzdHJpbmcsIHRhcmdldE5hbWU6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQge1xuICAgICAgICBjb25zdCBERUJVRyA9ICdbREVCVUddJztcbiAgICAgICAgY29uc3QgQ09OVEVYVCA9IGBbJHtjb250ZXh0fV1gO1xuICAgICAgICBjb25zdCBJQ09OID0gJ/CflI0nOyAvLyBkZWJ1ZyDslYTsnbTsvZhcbiAgICAgICAgY29uc29sZS5sb2coREVCVUcgKyBDT05URVhUICsgSUNPTiArIGAgJHt0YXJnZXROYW1lfTogJW9gLCB2YWx1ZSk7XG4gICAgfVxufVxuXG4vLyDsi7HquIDthqQg7J247Iqk7YS07Iqk66W8IOyDneyEse2VmOqzoCBleHBvcnRcbmV4cG9ydCBkZWZhdWx0IExvZ2dlclNlcnZpY2UuZ2V0SW5zdGFuY2UoKTtcbiJdfQ==